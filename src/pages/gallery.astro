---
import { ViewTransitions } from 'astro:transitions';
import fs from 'fs';
import path from 'path';

const filePath = path.resolve('./src/data/photos.json');
const photos = JSON.parse(fs.readFileSync(filePath, 'utf-8'));
---

<html lang="ja">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>tsum.ug - Gallery</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Rock+3D&display=swap" rel="stylesheet">
    <style type="scss">
      ul {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 10px;
        list-style-type: none;
        padding-left: 0;
      }

      li {
        position: relative;
        width: 100%;
        padding-top: 100%;
        margin-left: 0;
        img {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }
      .fullscreen-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.8);
        align-items: center;
        justify-content: center;
        z-index: 999;
        padding: 32px;
      }

      #fullscreen-image {
        width: 100%;
        height: 100%;
        object-fit: contain;
      }

      #fullscreen-loader {
        width: 100%;
        aspect-ratio: 16 / 9;
        background: linear-gradient(90deg, #e0e0e0 25%, #f0f0f0 50%, #e0e0e0 75%);
        background-size: 200% 100%;
        animation: placeholder-loading 1.5s infinite;
      }

      @keyframes placeholder-loading {
        0% {
          background-position: 200% 0;
        }
        100% {
          background-position: -200% 0;
        }
      }
    </style>
    <ViewTransitions />
  </head>
	<body>
		<ul>
      {photos.map((photo) => (
        <li>
          <img src={photo.thumbnail_url} data-original-src={photo.original_url} alt={photo.filename} class="grid-item" loading="lazy" />
        </li>
      ))}
		</ul>
    <div class="fullscreen-overlay">
      <div id="fullscreen-loader"></div>
      <img id="fullscreen-image" src="" alt="Fullscreen Image" />
    </div>
    <script>
      const gridItems = document.querySelectorAll('.grid-item');
      const fullscreenOverlay = document.querySelector('.fullscreen-overlay');
      const fullscreenLoader = document.querySelector('#fullscreen-loader');
      const fullscreenImage = document.querySelector('#fullscreen-image');

      gridItems.forEach(item => {
        item.addEventListener('click', (event) => {
          fullscreenLoader.style.display = 'block';
          fullscreenImage.style.display = 'none';
          const imgSrc = event.target.dataset.originalSrc;
          fullscreenImage.src = imgSrc;
          document.startViewTransition(() => {
            fullscreenOverlay.style.display = 'flex';
          });
        });
      });

      function closeFullscreen() {
        document.startViewTransition(() => {
          fullscreenOverlay.style.display = 'none';
        });
      }

      fullscreenOverlay.addEventListener('click', () => {
        closeFullscreen()
      });

      document.addEventListener('keydown', (event) => {
        if (event.key === 'Escape') {
          closeFullscreen();
        }
      });

      window.addEventListener("load", () => {
        fullscreenImage.addEventListener("load", () => {
          fullscreenLoader.style.display = 'none';
          fullscreenImage.style.display = 'block';
        });
      });
    </script>
	</body>
</html>